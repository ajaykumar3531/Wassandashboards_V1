@layout DashboardLayouts;

<style>
    .layout-container {
    display: flex;
    height: 100vh;
    }

    .sidebar {
    background: #f8f9fa;
    width: 250px;
   
    transition: width 0.3s ease;
    overflow-y: auto;
    }

    .content {
    flex-grow: 1;
    padding: 20px;
    overflow-y: auto;
    }

    .nav-link {
    font-weight: 500;
    color: #333;
    display: block;
    padding: 10px;
    text-decoration: none;
    cursor: pointer;
    }

    .nav-link:hover {
    background-color: #e9ecef;
    border-radius: 5px;
    }

    .submenu {
    list-style: none;
    padding-left: 15px;
    margin: 0;
    display: none;
    }

    .submenu.show {
    display: block;
    }

    .report-container {
    flex-grow: 1;
    padding: 10px;
    display: flex;
    align-items: center;
    justify-content: center;
    }

    iframe {
    width: 100%;
    height: 100%;
    border: none;
    }
</style>

<div class="layout-container">
    <!-- Sidebar Section -->
    <nav class="sidebar card py-2 mb-4">
        <ul class="nav flex-column">
            @foreach (var item in menuItems)
            {
                <li class="nav-item">
                    @if (item.SubItems?.Any() == true)
                    {
                        <a href="javascript:void(0)" class="nav-link" @onclick="() => ToggleSubmenu(item)">
                            @item.Title
                            <i class="bi small @(item.IsExpanded ? "bi-caret-up-fill" : "bi-caret-down-fill")"></i>
                        </a>
                        <ul class="submenu @(item.IsExpanded ? "show" : "")">
                            @foreach (var subItem in item.SubItems)
                            {
                                <li>
                                    <a class="nav-link" href="javascript:void(0)" @onclick="() => LoadContent(subItem)">
                                        @subItem.Title
                                    </a>
                                </li>
                            }
                        </ul>
                    }
                    else
                    {
                        <a class="nav-link" href="javascript:void(0)" @onclick="() => LoadContent(item)">
                            @item.Title
                        </a>
                    }
                </li>
            }
        </ul>
    </nav>


</div>

@code {

    private List<MenuItem> menuItems = new()
    {
        new MenuItem(12,"Home", "https://app.powerbi.com/view?r=some_report_id_1"),
        new MenuItem(13,"Sales Reports", "#", new List<MenuItem>
        {
            new MenuItem(15,"Sales Overview", "https://app.powerbi.com/view?r=some_report_id_2"),
            new MenuItem(14,"Quarterly Sales", "https://app.powerbi.com/view?r=some_report_id_3")
        }),
        new MenuItem(43,"Customer Insights", "https://app.powerbi.com/view?r=some_report_id_4"),
        new MenuItem(67,"Marketing Analytics", "https://app.powerbi.com/view?r=some_report_id_5")
    };

    protected override async Task OnInitializedAsync()
    {
        await LoadData();
    }

    private async Task LoadData()
    {
        try
        {

        }
        catch (Exception ex)
        {
            throw ex;   
        }
    }

    private async Task ToggleSubmenu(MenuItem item)
    {
        item.IsExpanded = !item.IsExpanded;
    }

    private async Task LoadContent(MenuItem menuItem)
    {
        if(menuItem != null)
        {
            _navigation.NavigateTo($"/report/{menuItem.ReportID.ToString()}");
        }
    }

    public class MenuItem
    {
        public long ReportID { get; set; } 
        public string Title { get; set; }
        public string Url { get; set; }
        public List<MenuItem>? SubItems { get; set; }
        public bool IsExpanded { get; set; }

        public MenuItem(long reportID,string title, string url, List<MenuItem>? subItems = null)
        {
            ReportID = reportID;
            Title = title;
            Url = url;
            SubItems = subItems;
        }
    }
}
